# -*- coding: utf-8 -*-
"""Drug1n.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1N7axrKMt9IMqN_TcaX8n1Xs91scnThBs
"""



# cargar librerias
import pandas as pd
from sklearn.tree import DecisionTreeClassifier # Import DST
from sklearn.model_selection import train_test_split
from sklearn import metrics

titanic= pd.read_csv("/content/csv_result-titanic.csv")
titanic.head()

feature_cols = ['Clase','Edad','Sexo']
x = titanic[feature_cols]
y = titanic.Sobrevivio

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=1)
# Create Decision Tree classifer object
clf = DecisionTreeClassifier()

# Train Decision Tree Classifer
clf = clf.fit(x_train,y_train)

#Predict the response for test dataset
y_pred = clf.predict(x_test)

print("precision:",metrics.accuracy_score(y_test, y_pred))

from six import StringIO
from IPython.display import Image
from sklearn.tree import export_graphviz
import pydotplus
dot_data = StringIO()
export_graphviz(clf, out_file=dot_data,
                filled=True, rounded=True,
                special_characters=True, feature_names = feature_cols,class_names=['0','1'])
graph = pydotplus.graph_from_dot_data(dot_data.getvalue())
graph.write_png('titanic.png')
Image(graph.create_png())

from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay
pred = clf.predict(x_test)
cm = confusion_matrix(y_test, pred, labels=clf.classes_)
disp = ConfusionMatrixDisplay(confusion_matrix=cm,display_labels=clf.classes_)
disp.plot()

col = ['Clase','Edad']
titanicvs= pd.read_csv("/content/csv_result-titanic.csv",usecols=col)
titanicvs.plot()